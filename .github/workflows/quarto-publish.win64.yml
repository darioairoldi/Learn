name: Quarto Site Render and Deploy to GitHub Pages

on:
  # push:
  #   branches: [main]
  # pull_request:
  #   branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: self-hosted
    # runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Quarto (Native Windows)
      shell: pwsh
      run: |
        Write-Host "Setting up Quarto using native Windows installation..."
        
        # Check if Quarto is already installed
        try {
          $existing = quarto --version 2>$null
          if ($existing) {
            Write-Host "Quarto already installed: $existing"
            exit 0
          }
        } catch {
          Write-Host "Quarto not found, proceeding with installation..."
        }
        
        # Download and install Quarto for Windows
        $quartoVersion = "1.4.550"  # Use latest stable version
        $quartoUrl = "https://github.com/quarto-dev/quarto-cli/releases/download/v$quartoVersion/quarto-$quartoVersion-win.msi"
        
        Write-Host "Downloading Quarto from: $quartoUrl"
        try {
          Invoke-WebRequest -Uri $quartoUrl -OutFile "quarto-installer.msi" -UseBasicParsing
          Write-Host "Download completed successfully"
          Write-Host "File size: $((Get-Item 'quarto-installer.msi').Length) bytes"
        } catch {
          Write-Host "Download failed: $_"
          exit 1
        }
        
        # Install Quarto silently
        Write-Host "Installing Quarto..."
        try {
          $process = Start-Process -FilePath "msiexec.exe" -ArgumentList "/i", "quarto-installer.msi", "/quiet", "/norestart" -Wait -PassThru
          Write-Host "Installation completed with exit code: $($process.ExitCode)"
        } catch {
          Write-Host "Installation failed: $_"
          exit 1
        }
        
        # Add Quarto to PATH for current session
        $quartoPath = "C:\Program Files\Quarto\bin"
        if (Test-Path $quartoPath) {
          $env:PATH = "$quartoPath;$env:PATH"
          Write-Host "Added $quartoPath to PATH"
          
          # Persist PATH for subsequent steps
          echo $quartoPath | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
          # Verify installation
          $version = & "$quartoPath\quarto.exe" --version
          Write-Host "Quarto installed successfully: $version"
        } else {
          Write-Host "Quarto installation directory not found at $quartoPath"
          # Check alternative locations
          $altPath = "C:\Program Files (x86)\Quarto\bin"
          if (Test-Path $altPath) {
            Write-Host "Found Quarto at alternative location: $altPath"
            $env:PATH = "$altPath;$env:PATH"
            echo $altPath | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          } else {
            Write-Host "Quarto not found in expected locations"
            exit 1
          }
        }
        
    - name: Check for Python requirements
      id: check-python
      shell: pwsh
      run: |
        if ((Test-Path "requirements.txt") -or (Test-Path "pyproject.toml")) {
          echo "python-needed=true" >> $env:GITHUB_OUTPUT
        } else {
          echo "python-needed=false" >> $env:GITHUB_OUTPUT
        }
        
    - name: Setup Python (if needed for computations)
      if: steps.check-python.outputs.python-needed == 'true'
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install Python dependencies (if needed)
      if: steps.check-python.outputs.python-needed == 'true'
      shell: pwsh
      run: |
        if (Test-Path "requirements.txt") {
          pip install -r requirements.txt
        } elseif (Test-Path "pyproject.toml") {
          pip install -e .
        }
        
    - name: Setup R (if needed for computations)
      uses: r-lib/actions/setup-r@v2
      if: false  # Set to true if you use R
      with:
        r-version: '4.3.0'

    - name: Render Quarto Project
      shell: pwsh
      run: |
        Write-Host "Rendering Quarto project..."
        quarto render --to html
        
        Write-Host "Verifying output directory..."
        if (Test-Path "docs") {
          $htmlFiles = Get-ChildItem "docs" -Filter "*.html" -Recurse
          Write-Host "Generated $($htmlFiles.Count) HTML files"
          
          # Check if navigation.json was copied
          if (Test-Path "docs/navigation.json") {
            Write-Host "? navigation.json found in output"
          } else {
            Write-Warning "?? navigation.json not found in output"
          }
        } else {
          Write-Error "? docs directory not found after rendering"
          exit 1
        }
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload Pages artifact
      uses: actions/upload-artifact@v4
      with:
        name: github-pages-build
        path: docs/
        retention-days: 1

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Download Pages artifact
      uses: actions/download-artifact@v4
      with:
        name: github-pages-build
        path: pages/
        
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: pages/
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
